name: Deploy XLSVC Frontend

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "package.json"
      - "vite.config.js"
      - "index.html"
      - "public/**"
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Prepare deployment directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            # Create ui/xlsvc directory if it doesn't exist
            mkdir -p ~/public_html/ui/xlsvc

            # Create backup of existing files if they exist
            if [ "$(ls -A ~/public_html/ui/xlsvc 2>/dev/null)" ]; then
              backup_dir="backup_$(date +%Y%m%d_%H%M%S)"
              mkdir -p ~/public_html/ui/xlsvc/"$backup_dir"
              mv ~/public_html/ui/xlsvc/* ~/public_html/ui/xlsvc/"$backup_dir"/ 2>/dev/null || true
              echo "Backup created in $backup_dir"
            fi

      - name: Upload Frontend Files
        run: |
          # Use rsync to upload built files
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            --delete \
            ./dist/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ secrets.DEPLOY_PATH }}/ui/xlsvc/

      - name: Setup Frontend Configuration
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            cd ~/public_html/ui/xlsvc

            # Create .htaccess for React SPA routing
            cat > .htaccess << 'HTACCESS_EOF'
            RewriteEngine On

            # Handle React Router (SPA routing)
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_URI} !^/assets/
            RewriteRule ^(.*)$ /index.html [QSA,L]

            # Security headers
            <IfModule mod_headers.c>
                Header always set X-Frame-Options DENY
                Header always set X-Content-Type-Options nosniff
                Header always set Referrer-Policy "strict-origin-when-cross-origin"
                Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"
            </IfModule>

            # Compression
            <IfModule mod_deflate.c>
                AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json
            </IfModule>

            # Cache static assets
            <IfModule mod_expires.c>
                ExpiresActive On
                ExpiresByType text/css "access plus 1 month"
                ExpiresByType application/javascript "access plus 1 month"
                ExpiresByType image/png "access plus 1 month"
                ExpiresByType image/jpg "access plus 1 month"
                ExpiresByType image/jpeg "access plus 1 month"
                ExpiresByType image/gif "access plus 1 month"
                ExpiresByType image/svg+xml "access plus 1 month"
                ExpiresByType font/woff "access plus 1 month"
                ExpiresByType font/woff2 "access plus 1 month"
            </IfModule>
            HTACCESS_EOF

            # Set permissions
            chmod 644 .htaccess
            find . -type f -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.json" | xargs chmod 644 2>/dev/null || true
            find . -type d | xargs chmod 755 2>/dev/null || true

            echo "Frontend deployment complete!"

      - name: Verify Deployment
        run: |
          echo "Frontend Deployment Complete!"
          echo "Site: https://xlsvc.jsilverman.ca/"
          echo ""
          echo "Testing frontend..."
          sleep 10
          curl -f -s -o /dev/null -w "%{http_code}" https://xlsvc.jsilverman.ca/ || echo "Frontend not responding yet - check configuration"
